package com.myclass.config;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.builders.WebSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Component;

@Component
@EnableWebSecurity
public class WebSecurityConfig extends WebSecurityConfigurerAdapter{

	
	@Bean
	@Override
	public AuthenticationManager authenticationManagerBean() throws Exception {
	     return super.authenticationManagerBean();
	}
	
	@Override
	protected void configure(HttpSecurity http) throws Exception  {	
		http.csrf().disable()
		.antMatcher("/**") 
		.authorizeRequests()
		.antMatchers("/auth/login", "/api/category/**", "/api/auth/**", "/api/**")
		.permitAll() 
		.antMatchers("/home/**")
		.permitAll()
		.anyRequest() 
		.authenticated();
		
		http.formLogin().loginPage("/login")
		.loginProcessingUrl("/login")
		.usernameParameter("username")
		.passwordParameter("password")
		.defaultSuccessUrl("/login", true)
		.failureUrl("/auth/login?error=true");
		
		http.logout().logoutUrl("/auth/logout")
		.logoutSuccessUrl("/auth/login");
	}
	
	@Override
	public void configure(WebSecurity web) {
		web.ignoring().antMatchers("/resources/**", "/static/**", 
				"/css/**", "/js/**","/fonts/**", "/icon/**", "/images/**", "/plugins/**");
	}
}
